version: '3'

# Add your networks/volumes/services for your microservice
services:
    management1:
        image: mysql/mysql-cluster:latest
        volumes:
            - ../../mysql.conf/my.cnf:/etc/my.cnf
            - ../../mysql.conf/mysql-cluster.cnf:/etc/mysql-cluster.cnf
            - mngt_data:/var/lib/mysql
        command: ndb_mgmd
        networks:
            db_net:
                ipv4_address: 192.168.0.2

    ndb1:
        image: mysql/mysql-cluster:latest
        volumes:
            - ../../mysql.conf/my.cnf:/etc/my.cnf
            - ../../mysql.conf/mysql-cluster.cnf:/etc/mysql-cluster.cnf
            - ndb1_data:/var/lib/mysql
        command: ndbd
        depends_on:
            - management1
        networks:
            db_net:
                ipv4_address: 192.168.0.3


    ndb2:
        image: mysql/mysql-cluster:latest
        volumes:
            - ../../mysql.conf/my.cnf:/etc/my.cnf
            - ../../mysql.conf/mysql-cluster.cnf:/etc/mysql-cluster.cnf
            - ndb2_data:/var/lib/mysql
        command: ndbd
        depends_on:
            - management1
        networks:
            db_net:
                ipv4_address: 192.168.0.4


    mysql1:
        image: mysql/mysql-cluster:latest
        ports:
            - 3306:3306
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: micro-ci-events
            MYSQL_DATABASE: micro-ci-events
            MYSQL_USER: micro-ci-events
            MYSQL_PASSWORD: micro-ci-events
        command: mysqld
        depends_on:
            - management1
            - ndb1
            - ndb2
        volumes:
           - ../../mysql.conf/my.cnf:/etc/my.cnf
           - ../../mysql.conf/mysql-cluster.cnf:/etc/mysql-cluster.cnf
        networks:
            app_net:
            db_net:
                ipv4_address: 192.168.0.5


    micro-ci-events:
        image: ci-events:latest
        build:
            context: ../../.
            dockerfile: Dockerfile
        command: sh -c "/wait && python app.py"
        depends_on:
            - mysql1
            - rabbitmq
            - adminer
            - consul
        links:
            - mysql1
            - rabbitmq
            - adminer
            - consul
        ports:
            - 5000:5000
        restart: always
        environment:
            DB_NAME: micro-ci-events
            DB_USER: micro-ci-events
            DB_PASSWORD: micro-ci-events
            DB_HOST: mysql1
            WAIT_HOSTS: mysql1:3306
            WAIT_HOSTS_TIMEOUT: 300
            WAIT_SLEEP_INTERVAL: 30
            WAIT_HOST_CONNECT_TIMEOUT: 30
            RABBIT_MQ_HOST: rabbitmq
            CONSUL_HOST: consul
        volumes:
            - ../../app:/events/app
        networks:
            app_net:

    rabbitmq:
        image: rabbitmq:3-management-alpine
        restart: on-failure:10
        environment:
            RABBITMQ_ERLANG_COOKIE: QKSHDLBKSSBCLBSLU
            RABBITMQ_DEFAULT_USER: admin
            RABBITMQ_DEFAULT_PASS: admin
            RABBITMQ_DEFAULT_VHOST: /
        ports:
            - 5672:5672
            - 15672:15672
        networks:
          app_net:


    consul:
        image: bitnami/consul:latest
        ports:
            - 8300:8300
            - 8301:8301
            - 8301:8301/udp
            - 8500:8500
            - 8600:8600
            - 8600:8600/udp
        networks:
            - app_net

#     traefik:
#         image: traefik:v2.2
#         command: --api.insecure=true --providers.docker
#         depends_on:
#             - micro-ci-events
#         ports:
#             - 83:80
#             - 8084:8080
#         volumes:
#             - /var/run/docker.sock:/var/run/docker.sock
#             - ../../traefik.conf/traefik.toml:/traefik.toml
#         networks:
#             app_net:



    adminer:
        image: adminer
        restart: always
        ports:
            - '8083:8080'
        depends_on:
            - mysql1
        networks:
            db_net:


volumes:
    mngt_data:
    ndb1_data:
    ndb2_data:


networks:
    app_net:
        driver: bridge
    db_net:
        ipam:
            driver: default
            config:
                - subnet: 192.168.0.0/24